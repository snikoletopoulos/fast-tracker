scalar DateTime

type Query {
	hello: String
	fast(id: ID!): Fast!
	fasts(userId: ID): [Fast!]!
}

type Mutation {
	startFast(options: StartFastInput): Fast!
	finishFast(options: FinishFastInput): Fast!
}

type User {
	id: ID!
	email: String!
	createdAt: DateTime!
	imageUrl: String!
	hasImage: Boolean!
	username: String
	fasts: [Fast!]!
}

type Fast {
	id: ID!
	startedAt: DateTime!
	endedAt: DateTime
	user: User!
	createdAt: DateTime!
}

input StartFastInput {
	startedAt: DateTime!
}

input FinishFastInput {
	endedAt: DateTime!
}
